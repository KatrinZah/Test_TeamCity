@id = 7
@projectId = "p{{id}}"
@buildTypeId = "b{{id}}"
@name = "n{{id}}"

### 0. Generate auth token
GET http://admin:admin@192.168.50.185:8111/authenticationTest.html?csrf
Accept: application/json

> {%
    client.global.set("token", response.body);
%}

### 1. Create project
POST http://192.168.50.185:8111/app/rest/projects
Content-Type: application/json
Accept: application/json
X-TC-CSRF-Token:{{token}}

{
  "parentProject": {
    "locator": "_Root"
    },
    "name": {{name}},
    "id": {{projectId}},
    "copyAllAssociatedSettings": true

}

### 2. Create build configuration
# @no-cookie-jar
POST http://admin:admin@localhost:8111/app/rest/buildTypes
Content-Type: application/json
Accept: application/json
#X-TC-CSRF-Token:{{token}}
#Authorization : "Basic YWRtaW46YWRtaW4="

{
  "id": {{buildTypeId}},
  "name": "Print Hl-Wl",
  "project": {
    "id": {{projectId}}
  },
  "steps": {
    "step": [
      {
        "name": "Print Hl-Wl",
        "type": "simpleRunner",
        "properties": {
          "property": [
            {
              "name": "script.content",
              "value": "echo 'Hello World!'"
            },
            {
              "name": "teamcity.step.mode",
              "value": "default"
            },
            {
              "name": "use.custom.script",
              "value": "true"
            }
          ]
        }
      }
    ]
  }
}

### 3. Run build
POST http://admin:admin@localhost:8111/app/rest/buildQueue
Content-Type: application/json
Accept: application/json
X-TC-CSRF-Token:{{token}}

{
  "buildType": {
    "id": "id456"
  }
}

### 4. Check build status
GET http://admin:admin@localhost:8111/app/rest/builds/id:2
Content-Type: application/json
Accept: application/json
X-TC-CSRF-Token:{{token}}
